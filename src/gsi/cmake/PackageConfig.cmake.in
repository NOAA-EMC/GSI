@PACKAGE_INIT@

#@PROJECT_NAME@-config.cmake
#
# Imported interface targets provided:
#  * @PROJECT_NAME@::global_gsi - global GSI library target
#  * @PROJECT_NAME@::regional_gsi - global GSI library target

# Include targets file.  This will create IMPORTED target @PROJECT_NAME@
include("${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@-targets.cmake")
include("${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@-config-version.cmake")
include(CMakeFindDependencyMacro)

find_dependency(MPI)
find_dependency(NetCDF COMPONENTS Fortran)

# ON|OFF implies @PROJECT_NAME@ was compiled with/without -DENABLE_MKL=ON|OFF
if(@ENABLE_MKL@)
  find_dependency(MKL QUIET)
endif()
if(MKL_FOUND)
  set(LAPACK_LIBRARIES ${MKL_LIBRARIES})
else()
  find_dependency(LAPACK REQUIRED)
endif()

# ON|OFF implies @PROJECT_NAME@ was compiled with/without OpenMP
if(@OPENMP@)
  find_dependency(OpenMP COMPONENTS Fortran)
endif()

find_dependency(bacio REQUIRED)
find_dependency(sigio REQUIRED)
find_dependency(sfcio REQUIRED)
find_dependency(nemsio REQUIRED)
find_dependency(ncio REQUIRED)
find_dependency(sp REQUIRED)
find_dependency(ip REQUIRED)
find_dependency(w3emc REQUIRED)
find_dependency(bufr REQUIRED)
find_dependency(crtm REQUIRED)

# ON|OFF implies @PROJECT_NAME@ was compiled with/without -DBUILD_REGIONAL=ON|OFF
if(@BUILD_REGIONAL@)
  find_dependency(wrf_io REQUIRED)
endif()

# Get the build type from library target
get_target_property(@PROJECT_NAME@_BUILD_TYPES @PROJECT_NAME@::@PROJECT_NAME@ IMPORTED_CONFIGURATIONS)

check_required_components("@PROJECT_NAME@")

get_target_property(location @PROJECT_NAME@::@PROJECT_NAME@ LOCATION)
message(STATUS "Found @PROJECT_NAME@: ${location} (found version \"${PACKAGE_VERSION}\")")

