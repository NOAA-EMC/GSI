function(set_LIBRARY_UTIL)
    set(WRFLIB_Fortran_FLAGS "-DPOUND_FOR_STRINGIFY ${FOPT3} ${FP_MODEL_SOURCE} ${BYTERECLEN} ${BIG_ENDIAN} ${DEBINFO} ${TRACEBACK} -D_REAL8_ ${MPI_Fortran_COMPILE_FLAGS}" CACHE INTERNAL "")
    set(WRFLIB_C_FLAGS "-I. -DFortranByte=char -DFortranInt=int -DFortranLlong='long long'  ${FOPT3}  -Dfunder" CACHE INTERNAL "" )
    set (NDATE_Fortran_FLAGS "${HOST_FLAG} ${FP_MODEL_SOURCE} ${FTZ} ${BYTERECLEN} ${BIG_ENDIAN} ${HEAP_ARRAYS} -DCOMMCODE -DLINUX -DUPPLITTLEENDIAN ${FOPT3} -Wl,-noinhibit-exec" CACHE INTERNAL "" )
    set(NCDIAG_Fortran_FLAGS "${FREEFORM} ${BYTERECLEN} ${BIG_ENDIAN} ${NOLINELEN}" CACHE INTERNAL "" )
    set(FV3GFS_NCIO_Fortran_FLAGS "${FREEFORM}" CACHE INTERNAL "" )
    set(UTIL_Fortran_FLAGS "${FOPT3} ${HOST_FLAG} ${WARNALL} ${IMPLICITNONE} ${TRACEBACK} ${FP_MODEL_STRICT} ${BIG_ENDIAN} -DWRF -D_REAL8_ ${OpenMP_Fortran_FLAGS}" CACHE INTERNAL "")
    set(UTIL_COM_Fortran_FLAGS "${FOPT3} ${FP_MODEL_SOURCE} ${BIG_ENDIAN} ${BYTERECLEN} ${IMPLICITNONE}" CACHE INTERNAL "")
    set(COV_CALC_FLAGS "${FOPT3} ${HOST_FLAG} ${WARNALL} ${IMPLICITNONE} ${TRACEBACK} ${FP_MODEL_STRICT} ${LITTLE_ENDIAN} ${OpenMP_Fortran_FLAGS}" CACHE INTERNAL "")
endfunction(set_LIBRARY_UTIL)

function(set_LIBRARY_UTIL_Debug)
    set(NCDIAG_Fortran_FLAGS "${FREEFORM} ${BYTERECLEN} ${BIG_ENDIAN} ${NOLINELEN}" CACHE INTERNAL "" )
    set(FV3GFS_NCIO_Fortran_FLAGS "${FREEFORM}" CACHE INTERNAL "" )
    set(WRFLIB_Fortran_FLAGS "-DPOUND_FOR_STRINGIFY ${FOPT1} ${DEBINFO} ${FP_MODEL_SOURCE} ${BYTERECLEN} ${BIG_ENDIAN} ${DEBINFO} ${TRACEBACK} -D_REAL8_ ${MPI_Fortran_COMPILE_FLAGS}" CACHE INTERNAL "")
    set(NDATE_Fortran_FLAGS "${HOST_FLAG} ${FP_MODEL_SOURCE} ${FTZ} ${BYTERECLEN} ${BIG_ENDIAN} ${HEAP_ARRAYS}  -DCOMMCODE -DLINUX -DUPPLITTLEENDIAN ${DEBINFO} -Wl,-noinhibit-exec" CACHE INTERNAL "" )
    set(WRFLIB_C_FLAGS "-I. -DFortranByte=char -DFortranInt=int -DFortranLlong='long long'  ${DEBINFO}  -Dfunder" CACHE INTERNAL "" )
    set(UTIL_Fortran_FLAGS "${FOPT0} ${HOST_FLAG} ${WARNALL} ${IMPLICITNONE} ${TRACEBACK} ${DEBINFO} ${DEBFULL} ${FP_MODEL_STRICT} ${BIG_ENDIAN} -D_REAL8_ ${OpenMP_Fortran_FLAGS}" CACHE INTERNAL "")
    set(UTIL_COM_Fortran_FLAGS "${FOPT0} ${WARNALL} ${IMPLICITNONE} ${TRACEBACK} ${DEBINFO} ${DEBFULL} ${FP_MODEL_STRICT} ${BIG_ENDIAN}" CACHE INTERNAL "")
    set(COV_CALC_FLAGS "${FOPT3} ${HOST_FLAG} ${IMPLICITNONE} ${TRACEBACK} ${FP_MODEL_STRICT} ${LITTLE_ENDIAN} ${OpenMP_Fortran_FLAGS} " CACHE INTERNAL "" )
endfunction(set_LIBRARY_UTIL_Debug)

function(set_GSI_ENKF)
    #Common release/production flags
    set(GSI_CFLAGS "-I. -DFortranByte=char -DFortranInt=int -DFortranLlong='long long'  ${FOPT3}  -Dfunder" CACHE INTERNAL "" )
    set(GSI_Fortran_FLAGS "${GSI_Platform_FLAGS} ${NOLINELEN} ${GSDCLOUDOPT}" CACHE INTERNAL "Full GSI Fortran FLAGS" )
    set(ENKF_Fortran_FLAGS "${ENKF_Platform_FLAGS} ${NOLINELEN} ${GSDCLOUDOPT}" CACHE INTERNAL "Full ENKF Fortran FLAGS" )
    set(GSDCLOUD_Fortran_FLAGS "${FOPT3} ${BIG_ENDIAN}" CACHE INTERNAL "")
endfunction(set_GSI_ENKF)

function (set_GSI_ENKF_Debug)
    set(GSI_Fortran_FLAGS "-DPOUND_FOR_STRINGIFY ${FOPT0} ${NOLINELEN} ${FP_MODEL_SOURCE} ${BIG_ENDIAN} ${BYTERECLEN} ${IMPLICITNONE} -${MC_MODEL_MEDIUM} ${SHARED}-intel ${DEBINFO} ${TRACEBACK} ${STACKLOCAL} ${CHECKALL},noarg_temp_created ${FP_STACK_CHECK} ${WARNALL},nointerfaces ${BIG_ENDIAN} ${IMPLICITNONE} -D_REAL8_ ${OpenMP_Fortran_FLAGS} ${MPI_Fortran_COMPILE_FLAGS} ${GSDCLOUDOPT}" CACHE INTERNAL "")
    set(ENKF_Fortran_FLAGS "${FOPT0} ${HOST_FLAG} ${WARNALL} ${NOLINELEN} ${IMPLICITNONE} ${TRACEBACK} ${DEBINFO} ${DEBUG} ${CHECKALL},noarg_temp_created ${FP_MODEL_STRICT} ${BIG_ENDIAN} ${BYTERECLEN} -D_REAL8_  ${OpenMP_Fortran_FLAGS} ${GSDCLOUDOPT}" CACHE INTERNAL "")
    set(GSDCLOUD_Fortran_FLAGS "-DPOUND_FOR_STRINGIFY ${FOPT3} ${BIG_ENDIAN}" CACHE INTERNAL "")
    #Common debug flags
    set(GSI_CFLAGS "-I. -DFortranByte=char -DFortranInt=int -DFortranLlong='long long'  ${DEBINFO}  -Dfunder" CACHE INTERNAL "" )
endfunction (set_GSI_ENKF_Debug)

function (setFlags)
  string(REPLACE "." ";" COMPILER_VERSION_LIST ${CMAKE_C_COMPILER_VERSION})
  list(GET COMPILER_VERSION_LIST 0 MAJOR_VERSION)
  list(GET COMPILER_VERSION_LIST 1 MINOR_VERSION)
  list(GET COMPILER_VERSION_LIST 2 PATCH_VERSION)
  set(COMPILER_VERSION "${MAJOR_VERSION}.${MINOR_VERSION}.${PATCH_VERSION}" CACHE INTERNAL "Compiler Version") 
  STRING(COMPARE EQUAL ${CMAKE_BUILD_TYPE} "RELEASE" BUILD_RELEASE)
  STRING(COMPARE EQUAL ${CMAKE_BUILD_TYPE} "PRODUCTION" BUILD_PRODUCTION)
  set(EXTRA_LINKER_FLAGS ${MKL_FLAG} CACHE INTERNAL "Extra Linker flags")
  if( (BUILD_RELEASE) OR (BUILD_PRODUCTION) )
    set_GSI_ENKF()
    set_LIBRARY_UTIL()
  else( ) #DEBUG flags
    message("Building DEBUG version of GSI")
    set( debug_suffix "_DBG" CACHE INTERNAL "" )
    set_GSI_ENKF_Debug()
    set_LIBRARY_UTIL_Debug()
  endif()
endfunction()

