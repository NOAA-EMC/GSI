
#------------------------------------------------------------------------------
#
#  OznMon_user_settings
#
#  Modify this file in order to change behavior of the OznMon package 
#------------------------------------------------------------------------------

#
#  ACCOUNT is used on zeus only for use with the qsub -a flag.  It is
#  empty on other platforms.
#
export ACCOUNT=${ACCOUNT:-}

#
#  PROJECT is used on wcoss only with the bjob -P flag.  It is 
#  empty on other platforms.
#
export PROJECT=${PROJECT:-GFS-DEV}

#
#  JOB_QUEUE is used on wcoss only with the bjob -q flag.  It is 
#  empty on other platforms.
#
export JOB_QUEUE=${JOB_QUEUE:-dev_shared}

#
#  GLB_AREA is either 1 (global) or 0 (regional)
#
export GLB_AREA=${GLB_AREA:-1}

#
#  OZNSTAT_LOCATION is location of the radstat files.  If OznMon runs as a 
#    job in a parallel then $COMOUT is used instead of the value defined below. 
#    When plotting, if horizontal plots are desired then OZNSTAT_LOCATION will
#    need to be set to the directory of the radstat files (we only extract 
#    horizontal data when it's needed rather than storing huge files all the 
#    time).
#
export OZNSTAT_LOCATION=${OZNSTAT_LOCATION:-/gpfs/dell1/nco/ops/com/gfs/prod}

#
#  USE_ANL switches on/off data extraction for analysis files (ges is always on)
#
#     0 = off, 1 = on
#
export USE_ANL=${USE_ANL:-1}

#
#  OZN_USE_RUN affects the data, image, and log file naming scheme, and is 
#  designed to support both gdas and gfs runs for a common data source.
#  (Note, lcm means lower case monitor name ("oznmon".) 
#
#  If set to 1 (default) then storage is :
#      nbns/stats/$suffix/$RUN.$pdy/$lcm
#      nbns/imgn/$suffix/$RUN/$lcm/pngs  
#      $LOGdir/$suffix/$RUN/$lcm
#
#  set to #  0 then the resulting storage locations are:
#      nbns/data/$suffix/$lcm.$PDY
#      nbns/imgn/$suffix/$lcm/pngs
#      $LOGdir/$suffix/$lcm
#
#  $RUN is "gdas"|"gfs" or whatever else makes sense for a RUN value.
#
export OZN_USE_RUN=${OZN_USE_RUN:-1}

#  DO_DATA_RPT switches on/off error checking and reporting of the penalty 
#  values by channel for each sat/instrument source plus a check for any 
#  missing (but expected) data sources.  This is primarily intended for use
#  with the operational data sets (GDAS,NDAS) where detection and reporting 
#  of drifting channel(s) on specific sat/instrument sources is 
#  desirable.  It is not normally necesary to apply this to parallels.  
#  0 = off, 1 = on
#
export DO_DATA_RPT=${DO_DATA_RPT:-1}

#  MAIL_TO is the the primary recipient of generated email warning messages
#  (if DO_DATA_RPT = 1).
#
export MAIL_TO=${MAIL_TO:-'edward.safford@noaa.gov'}


#  MAIL_CC is the the cc list of recipients of generated email warning messages
#  (if DO_DATA_RPT = 1).
#
if [[ -e /u/${LOGNAME}/bin/get_cc_list.pl ]]; then
   cc_list=`/u/${LOGNAME}/bin/get_cc_list.pl --nr ${OZNMON_SUFFIX}_${RUN} --mon OznMon`
else
   cc_list=""
fi
export MAIL_CC=${MAIL_CC:=${cc_list}}

#
#  RUN_ONLY_ON_DEV switches on/off the constraint to run only on the 
#  development machine.
#
#  0 = prod or dev, 1 = dev only.
#  
export RUN_ONLY_ON_DEV=${RUN_ONLY_ON_DEV:-1}

#
#  KEEPDATA switches on/off allowing the work directory to remain after data 
#  extraction.
#
#  1=keep working directory, 0=rm working directory.
#
export KEEPDATA=${KEEPDATA:-1}

#
#  REGIONAL_RR flags the data source as a regional rapid refresh.  The output 
#  data files from these sources are identified in a different format from 
#  other data sources.  
#
#  0 = not a RR source, 1 = RR source
#
export REGIONAL_RR=${REGIONAL_RR:-0}

#
#  CYCLE_INTERVAL indicates the period of time between cycle runs for any given
#  data source.  This is generally 6 hrs, but can be 3 or 1 hr for rapid 
#  refresh sources.
#
export CYCLE_INTERVAL=${CYCLE_INTERVAL:-6}


#
#  CLEAN_TANKDIR controls automatic removal of old data files in
#  TANKDIR. 
#
#  0 = no automatic removal, 1 = automatic removal
export CLEAN_TANKDIR=${CLEAN_TANKDIR:=1}
