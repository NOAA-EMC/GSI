#!/bin/sh
###########################################################
# NAMv4 Minimization Monitor (MinMon) job
###########################################################
set -xa
echo `date` $0 `date -u` begin
export PS4='$SECONDS + '

export RUN_ENVIR=${RUN_ENVIR:-nco}
export envir=${envir:-prod}

export PERL5LIB="/usrx/local/pm5/lib64/perl5:/usrx/local/pm5/share/perl5"

###############################
# Specify NET and RUN name
##############################
export NET=${NET:-nam}
export RUN=${RUN:-nam}


###########################################################
# obtain unique process id (pid) and make temp directories
###########################################################
export pid=$$
export outid=${outid:-"LL$job"}
export jobid=${jobid:-"${outid}.o${pid}"}

export DATAROOT=${DATAROOT:-/tmpnwprod2}
export DATA=${DATA:-${DATAROOT}/${jobid}}

mkdir -p $DATA
cd $DATA


########################################################### 
# obtain unique process id (pid) and make temp directories
###########################################################
export MINMON_SUFFIX=${MINMON_SUFFIX:-${RUN}}
export m_job=${m_job:-${MINMON_SUFFIX}_mmDE}


####################################
# File To Log Msgs
####################################
export jlogfile=${jlogfile:-${COMROOT}/logs/jlogfiles/jlogfile.${m_job}.${pid}}


##################################################
# SENDECF  - Flag Events on ECF
# SENDCOM  - Copy Files From TMPDIR to $COMOUT
# SENDDBN  - Issue DBNet Client Calls
# VERBOSE  - Specify Verbose Output 
##################################################
export SENDCOM=${SENDCOM:-YES}
export SENDDBN=${SENDDBN:-NO}
export SENDECF=${SENDECF:-NO}
export VERBOSE=${VERBOSE:-YES}


###################################
# Set up the UTILITIES
###################################
export utilscript=${utilscript:-${UTILROOT}/ush}
export utilexec=${utilexec:-${UTILROOT}/exec}


##############################################
# Specify Package Areas
##############################################
export HOMEnam=${HOMEnam:-${NWROOT}/nam_minmon.${nam_minmon_ver}}
export PARMnam=${PARMnam:-$HOMEnam/parm}
export SCRnam=${SCRnam:-$HOMEnam/scripts}
export FIXnam=${FIXnam:-$HOMEnam/fix}

export HOMEminmon=${HOMEminmon:-${NWROOT}/minmon_shared.${minmon_shared_ver}}
export EXECminmon=${EXECminmon:-$HOMEminmon/exec}
export USHminmon=${USHminmon:-$HOMEminmon/ush}
export FIXminmon=${FIXminmon:-${HOMEminmon/fix}}

###################################
# source the parm file
###################################
.  ${PARMnam}/nam_minmon.parm


#############################################
# Run setpdy and initialize PDY variables
#############################################
export cycle=t${cyc}z
setpdy.sh
. ./PDY


#############################################
# TANKverf - WHERE OUTPUT DATA WILL RESIDE
#############################################
M_TANKverf=${M_TANKverf:-${COMROOT}/${NET}/${envir}}
M_TANKverfM0=${M_TANKverfM0:-${M_TANKverf}/minmon_${MINMON_SUFFIX}.${PDY}}
export M_TANKverfM1=${M_TANKverfM1:-${M_TANKverf}/minmon_${MINMON_SUFFIX}.${PDYm1}}
export M_TANKverf=$M_TANKverfM0

export COM_IN=${COM_IN:-${COMROOT}/${NET}/${envir}}
export COMIN=${COMIN:-$COM_IN/${RUN}.${PDY}}

mkdir -p -m 775 $M_TANKverf
 

################################################################
#  nam uses fits2 files instead of gsistat files  
################################################################
case $cyc in
   00) export rgnHH=t00z
       export rgnTM=tm00;;
   01) export rgnHH=t06z
       export rgnTM=tm05;;
   02) export rgnHH=t06z
       export rgnTM=tm04;;
   03) export rgnHH=t06z
       export rgnTM=tm03;;
   04) export rgnHH=t06z
       export rgnTM=tm02;;
   05) export rgnHH=t06z
       export rgnTM=tm01;;
   06) export rgnHH=t06z
       export rgnTM=tm00;;
   07) export rgnHH=t12z
       export rgnTM=tm05;;
   08) export rgnHH=t12z
       export rgnTM=tm04;;
   09) export rgnHH=t12z
       export rgnTM=tm03;;
   10) export rgnHH=t12z
       export rgnTM=tm02;;
   11) export rgnHH=t12z
       export rgnTM=tm01;;
   12) export rgnHH=t12z
       export rgnTM=tm00;;
   13) export rgnHH=t18z
       export rgnTM=tm05;;
   14) export rgnHH=t18z
       export rgnTM=tm04;;
   15) export rgnHH=t18z
       export rgnTM=tm03;;
   16) export rgnHH=t18z
       export rgnTM=tm02;;
   17) export rgnHH=t18z
       export rgnTM=tm01;;
   18) export rgnHH=t18z       # dayfile changes here
       export rgnTM=tm00;;
   19) export rgnHH=t00z
       export rgnTM=tm05;;
   20) export rgnHH=t00z
       export rgnTM=tm04;;
   21) export rgnHH=t00z
       export rgnTM=tm03;;
   22) export rgnHH=t00z
       export rgnTM=tm02;;
   23) export rgnHH=t00z
       export rgnTM=tm01;;
esac

export gsistat=${gsistat:-${COMIN}/${RUN}.${rgnHH}.fits2.${rgnTM}}

msg="JOB HAS STARTED"
postmsg "$jlogfile" "$msg"

########################################################
# Execute the script.
${GMONSH:-$SCRnam/exnam_vrfminmon.sh.ecf} ${PDY} ${cyc}
########################################################

msg="JOB COMPLETED NORMALLY"
postmsg "$jlogfile" "$msg"

################################
# Remove the Working Directory
################################
KEEPDATA=${KEEPDATA:-NO}
cd ${DATAROOT}

if [ ${KEEPDATA} = NO ] ; then
  rm -rf ${DATA}
fi


