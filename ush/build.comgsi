#!/bin/sh
# common modules to compile GSI/EnKF:
#   Jet:      source /home/rtrr/PARM_EXEC/modulefiles/modulefile.jet.GSI_UPP_WRF
#   Theia:    source /home/rtrr/PARM_EXEC/modulefiles/modulefile.theia.GSI_UPP_WRF
#   Cheyenne: source /glade/p/ral/jntp/gge/modulefiles/modulefile.cheyenne.GSI_UPP_WRF
#
#  build commands:
#    cmake -DCOMGSI=ON -DENKF_MODE=WRF -DBUILD_GSDCLOUD_ARW=ON path_to_GSI
#    cmake -DCOMGSI=ON -DENKF_MODE=WRF -DBUILD_GSDCLOUD_ARW=ON -DBUILD_UTIL_COM=ON -DBUILD_ENKF_PREPROCESS_ARW=ON path_to_GSI"
#    (for global: cmake -DCOMGSI=ON -DENKF_MODE=GFS path_to_GSI)
#    make -j8
#

dir_root=$(pwd)

################# Hera ####################
if [[ "`grep -i "hera" /etc/hosts | head -n1`" != "" ]] ; then
    source /etc/profile.d/modules.sh
    module purge
    module load cmake/3.20.1
    module load intel/18.0.5.274
    module load impi/2018.0.4
    module load netcdf/4.7.0

    module use /scratch2/NCEPDEV/nwprod/hpc-stack/libs/hpc-stack/modulefiles/stack
    module load hpc/1.1.0
    module load hpc-intel/18.0.5.274
    module load hpc-impi/2018.0.4
    module load bufr/11.4.0
    module load ip/3.3.3
    module load nemsio/2.5.2
    module load sfcio/1.4.1
    module load sigio/2.3.2
    module load sp/2.3.3
    module load w3nco/2.4.1
    module load w3emc/2.7.3
    module load bacio/2.4.1
    module load crtm/2.3.0
    module load wrf_io/1.2.0

################# Jet ####################
elif [[ -d /jetmon ]] ; then
    source /etc/profile.d/modules.sh
    module purge
    module load cmake/3.16.1
    module load intel/18.0.5.274
    module load impi/2018.4.274
    module load netcdf/4.7.0 #don't load netcdf/4.7.4 from hpc-stack, GSI does not compile with it.

    module use /lfs4/HFIP/hfv3gfs/nwprod/hpc-stack/libs/modulefiles/stack
    module load hpc/1.1.0
    module load hpc-intel/18.0.5.274
    module load hpc-impi/2018.4.274
    module load bufr/11.4.0
    module load bacio/2.4.1
    module load crtm/2.3.0
    module load ip/3.3.3
    module load nemsio/2.5.2
    module load sp/2.3.3
    module load w3emc/2.7.3
    module load w3nco/2.4.1
    module load sfcio/1.4.1
    module load sigio/2.3.2
    module load wrf_io/1.2.0

################# Cheyenne ####################
elif [[ -d /glade ]] ; then
    source /etc/profile.d/modules.sh
    module purge
    module load intel/18.0.5 ncarenv ncarcompilers
    module load impi/2018.4.274
    module load mkl/2018.0.5
    module load netcdf/4.7.4

    module use /glade/p/ral/jntp/gge/hpc-stacks/modulefiles/stack
    module load hpc/1.1.0
    module load hpc-intel/18.0.5
    module load hpc-impi/2018.4.274
    module load bufr/11.5.0
    module load ip/3.3.3
    module load nemsio/2.5.2
    module load sfcio/1.4.1
    module load sigio/2.3.2
    module load sp/2.3.3
    module load w3nco/2.4.1
    module load w3emc/2.7.3
    module load bacio/2.4.1
    module load crtm/2.3.0
    module load wrf_io/1.2.0
    module load cmake/3.18.2

################# Orion ####################
elif [[ -d /work/noaa ]] ; then  ### orion
    module purge
    module load intel/2018.4
    module load impi/2018.4
    module load netcdf/4.7.2

    module use /apps/contrib/NCEP/libs/hpc-stack/modulefiles/stack 
    module load hpc/1.1.0
    module load hpc-intel/2018.4
    module load hpc-impi/2018.4
    module load bufr/11.4.0
    module load ip/3.3.3
    module load nemsio/2.5.2
    module load sfcio/1.4.1
    module load sigio/2.3.2
    module load sp/2.3.3
    module load w3nco/2.4.1
    module load w3emc/2.7.3
    module load bacio/2.4.1
    module load crtm/2.3.0
    module load wrf_io/1.2.0
    module load cmake

################# Generic ####################
else
    echo -e "\nunknown machine"
    echo "Please modify build.comgsi at this location"
    echo "to load required modules"
    ##follow the above examples and delete the following "exit 9" to go forward
    exit 9
    source /etc/profile.d/modules.sh
    #load modules from the NOAA hpc-stack
fi

## if NETCDF4 is set to 0 or 1, unset it
if [[ "$NETCDF4" == "1" ]] || [[ "$NETCDF4" == "0" ]]; then
  unset NETCDF4
fi

set -x
rm -rf $dir_root/build
mkdir -p $dir_root/build
cd $dir_root/build
set +x


echo "compiled at the node:" >> output.log
hostname  >> output.log
module list >> output.log 
echo -e "\nThe branch name:" >> output.log
git branch | grep "*"  >> output.log
echo -e "\nThe commit ID:" >> output.log
git log -1 | head -n1 >> output.log
echo -e "\ngit status:" >> output.log
git status >> output.log
echo -e "\nCompiling commands:" >> output.log
echo "  cmake -DCOMGSI=ON -DENKF_MODE=WRF -DBUILD_GSDCLOUD_ARW=ON -DBUILD_ENKF_PREPROCESS_ARW=ON -DBUILD_UTIL_COM=ON .." >> output.log
echo "  make -j8" >> output.log
cat output.log


cmake -DCOMGSI=ON -DENKF_MODE=WRF -DBUILD_GSDCLOUD_ARW=ON -DBUILD_ENKF_PREPROCESS_ARW=ON -DBUILD_UTIL_COM=ON ..  2>&1  | tee output.cmake
make -j 8 2>&1 | tee output.compile

###aftermath
commitID=`git log -1 | head -n1 |cut -c8-15`
repoName=`git config --get remote.origin.url | cut -d: -f2`
repoName=${repoName//\//:}
datestamp=`date +%Y%m%d`
cd bin
ln -sf gsi.x gsi.x_${repoName}_${datestamp}_${commitID}
ln -sf enkf_wrf.x enkf_wrf.x_${repoName}_${datestamp}_${commitID}
ln -sf enspreproc.x enspreproc.x_${repoName}_${datestamp}_${commitID}
###mv $dir_root/build $dir_root/build_$commitID

echo -e "\n\nAll build results are at ./build/ \n\n"

exit
